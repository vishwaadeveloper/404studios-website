generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model FeatureGroup {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @db.VarChar(100)
  description  String?
  iconName     String?   @map("icon_name") @db.VarChar(50)
  displayOrder Int?      @map("display_order")
  isActive     Boolean   @default(true) @map("is_active")
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  features     Feature[]

  @@map("feature_groups")
}

model Feature {
  id           String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  groupId      String                @map("group_id") @db.Uuid
  name         String                @db.VarChar(100)
  description  String?
  explanation  String?
  isCountable  Boolean               @default(false) @map("is_countable")
  minCount     Int                   @default(1) @map("min_count")
  displayOrder Int?                  @map("display_order")
  isActive     Boolean               @default(true) @map("is_active")
  createdAt    DateTime              @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime              @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  defaults     BusinessTypeDefault[]
  calculations CalculationFeature[]
  tiers        FeatureTier[]
  group        FeatureGroup          @relation(fields: [groupId], references: [id])

  @@map("features")
}

model FeatureTier {
  id           String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  featureId    String               @map("feature_id") @db.Uuid
  tierName     String               @map("tier_name") @db.VarChar(20)
  description  String?
  price        Decimal              @db.Decimal(10, 2)
  createdAt    DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime             @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  calculations CalculationFeature[]
  feature      Feature              @relation(fields: [featureId], references: [id])

  @@unique([featureId, tierName])
  @@map("feature_tiers")
}

model BusinessType {
  id           String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String                @db.VarChar(100)
  slug         String                @unique @db.VarChar(50)
  description  String?
  basePrice    Decimal               @map("base_price") @db.Decimal(10, 2)
  timelineDays Int?                  @map("timeline_days")
  isActive     Boolean               @default(true) @map("is_active")
  createdAt    DateTime              @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime              @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  defaults     BusinessTypeDefault[]
  pages        BusinessTypePage[]
  calculations PricingCalculation[]

  @@map("business_types")
}

model BusinessTypeDefault {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  businessTypeId String       @map("business_type_id") @db.Uuid
  featureId      String       @map("feature_id") @db.Uuid
  defaultTier    String       @map("default_tier") @db.VarChar(20)
  defaultCount   Int          @default(1) @map("default_count")
  createdAt      DateTime     @default(now()) @map("created_at") @db.Timestamptz(6)
  businessType   BusinessType @relation(fields: [businessTypeId], references: [id])
  feature        Feature      @relation(fields: [featureId], references: [id])

  @@unique([businessTypeId, featureId])
  @@map("business_type_defaults")
}

model BusinessTypePage {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  businessTypeId String       @map("business_type_id") @db.Uuid
  pageType       String       @map("page_type") @db.VarChar(20)
  pageName       String       @map("page_name") @db.VarChar(100)
  isDefault      Boolean      @default(true) @map("is_default")
  displayOrder   Int?         @map("display_order")
  createdAt      DateTime     @default(now()) @map("created_at") @db.Timestamptz(6)
  businessType   BusinessType @relation(fields: [businessTypeId], references: [id])

  @@map("business_type_pages")
}

model ServiceCategory {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(50)
  slug        String    @unique @db.VarChar(50)
  description String?
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  services    Service[]

  @@map("service_categories")
}

model Service {
  id          String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String          @db.VarChar(100)
  slug        String          @unique @db.VarChar(100)
  description String?
  categoryId  String          @map("category_id") @db.Uuid
  priceMin    Decimal?        @map("price_min") @db.Decimal(10, 2)
  priceMax    Decimal?        @map("price_max") @db.Decimal(10, 2)
  demoUrl     String?         @map("demo_url") @db.VarChar(255)
  iconName    String?         @map("icon_name") @db.VarChar(50)
  isActive    Boolean         @default(true) @map("is_active")
  createdAt   DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime        @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  category    ServiceCategory @relation(fields: [categoryId], references: [id])

  @@map("services")
}

model Contact {
  id               String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String               @db.VarChar(100)
  email            String               @db.VarChar(255)
  phone            String?              @db.VarChar(20)
  company          String?              @db.VarChar(100)
  projectType      String?              @map("project_type") @db.VarChar(50)
  budgetRange      String?              @map("budget_range") @db.VarChar(50)
  timeline         String?              @db.VarChar(50)
  description      String?
  preferredPackage String?              @map("preferred_package") @db.VarChar(50)
  status           String               @default("new") @db.VarChar(20)
  createdAt        DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime             @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  formSteps        ContactFormStep[]
  calculations     PricingCalculation[]
  timeSlots        TimeSlot[]

  @@map("contacts")
}

model TimeSlot {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date        DateTime @db.Date
  time        DateTime @db.Time(6)
  isAvailable Boolean  @default(true) @map("is_available")
  contactId   String?  @map("contact_id") @db.Uuid
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  contact     Contact? @relation(fields: [contactId], references: [id])

  @@unique([date, time])
  @@map("time_slots")
}

model ContactFormStep {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contactId   String   @map("contact_id") @db.Uuid
  stepNumber  Int      @map("step_number")
  stepData    Json     @map("step_data")
  completedAt DateTime @map("completed_at") @db.Timestamptz(6)
  contact     Contact  @relation(fields: [contactId], references: [id])

  @@map("contact_form_steps")
}

model PricingCalculation {
  id              String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sessionId       String?              @map("session_id") @db.VarChar(100)
  businessTypeId  String               @map("business_type_id") @db.Uuid
  totalPrice      Decimal              @map("total_price") @db.Decimal(10, 2)
  calculationData Json                 @map("calculation_data")
  contactId       String?              @map("contact_id") @db.Uuid
  createdAt       DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  features        CalculationFeature[]
  businessType    BusinessType         @relation(fields: [businessTypeId], references: [id])
  contact         Contact?             @relation(fields: [contactId], references: [id])

  @@map("pricing_calculations")
}

model CalculationFeature {
  id            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  calculationId String             @map("calculation_id") @db.Uuid
  featureId     String             @map("feature_id") @db.Uuid
  tierName      String             @map("tier_name") @db.VarChar(20)
  count         Int                @default(1)
  unitPrice     Decimal            @map("unit_price") @db.Decimal(10, 2)
  totalPrice    Decimal            @map("total_price") @db.Decimal(10, 2)
  calculation   PricingCalculation @relation(fields: [calculationId], references: [id])
  feature       Feature            @relation(fields: [featureId], references: [id])
  tier          FeatureTier        @relation(fields: [featureId, tierName], references: [featureId, tierName])

  @@map("calculation_features")
}

model ContactInfo {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type      String   @db.VarChar(20)
  label     String   @db.VarChar(50)
  value     Json
  iconName  String   @map("icon_name") @db.VarChar(50)
  color     String   @db.VarChar(20)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("contact_info")
}

model ProjectType {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  value       String   @unique @db.VarChar(50)
  label       String   @db.VarChar(100)
  description String?
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("project_types")
}

model BudgetRange {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  value        String   @unique @db.VarChar(50)
  label        String   @db.VarChar(100)
  minAmount    Decimal? @map("min_amount") @db.Decimal(10, 2)
  maxAmount    Decimal? @map("max_amount") @db.Decimal(10, 2)
  displayOrder Int?     @map("display_order")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("budget_ranges")
}

model TimelineOption {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  value        String   @unique @db.VarChar(50)
  label        String   @db.VarChar(100)
  description  String?
  displayOrder Int?     @map("display_order")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("timeline_options")
}

model PackageOption {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  value        String   @unique @db.VarChar(50)
  label        String   @db.VarChar(100)
  description  String?
  displayOrder Int?     @map("display_order")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("package_options")
}

model MigrationLog {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  migrationPhase   String   @map("migration_phase") @db.VarChar(50)
  entityType       String   @map("entity_type") @db.VarChar(50)
  entityId         String?  @map("entity_id") @db.Uuid
  operation        String   @db.VarChar(20)
  oldValues        Json?    @map("old_values")
  newValues        Json?    @map("new_values")
  validationResult Json?    @map("validation_result")
  status           String   @default("pending") @db.VarChar(20)
  errorMessage     String?  @map("error_message")
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("migration_logs")
}

model SystemAudit {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tableName String   @map("table_name") @db.VarChar(50)
  recordId  String   @map("record_id") @db.Uuid
  operation String   @db.VarChar(20)
  oldValues Json?    @map("old_values")
  newValues Json?    @map("new_values")
  userId    String?  @map("user_id") @db.VarChar(50)
  userAgent String?  @map("user_agent")
  ipAddress String?  @map("ip_address") @db.VarChar(45)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("system_audit")
}

model FeatureFlag {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String   @unique @db.VarChar(100)
  description       String?
  isEnabled         Boolean  @default(false) @map("is_enabled")
  rolloutPercentage Decimal  @default(0) @map("rollout_percentage") @db.Decimal(5, 2)
  conditions        Json?
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("feature_flags")
}
